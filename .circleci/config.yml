version: 2.1

orbs:
  sam: circleci/aws-sam-serverless@6.1.0
  aws-cli: circleci/aws-cli@4.0.0
  terraform: circleci/terraform@3.2.1

jobs:
  deploy-serverless:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - aws-cli/install
      - sam/install
      - run:
          name: Deploy Serverless Stack with SAM
          command: |
            STACK_NAME="rds-automation-stack"
            if aws cloudformation describe-stacks --stack-name "$STACK_NAME" &> /dev/null; then
              echo "Stack already exists. Skipping SAM deployment."
              exit 0
            else
              #echo "ðŸš€ Stack not found. Deploying with SAM..."
              sam build
              sam deploy --stack-name rds-automation-stack \
                         --capabilities CAPABILITY_IAM \
                         --capabilities CAPABILITY_NAMED_IAM \
                         --region $AWS_REGION \
                         --resolve-s3 \
                         --no-confirm-changeset \
                         --no-fail-on-empty-changeset
            fi

  apply-terraform:
    executor:
      name: terraform/default
      tag: "1.5.7"
    steps:
      - checkout
      - run:
          name: Terraform Apply to Merged Path
          command: |
            echo "Recent commits:"
            git log --oneline -n 3 || true

            echo "Detecting changed env:"
            TARGET_PATH=$(git diff --name-only HEAD^ HEAD | grep '^terraform/env/' | head -n1 | sed -E 's|(terraform/env/[^/]+).*|\1|')

            if [ -z "$TARGET_PATH" ]; then
              echo "No env path found. Skipping Terraform apply."
              exit 0
            fi

            echo "TARGET_PATH=$TARGET_PATH"
            cd "$TARGET_PATH"

            echo "Running terraform init..."
            terraform init -input=false

            echo "Validating config..."
            terraform validate

            echo "Planning changes..."
            terraform plan -input=false -out=tfplan

            echo "Plan output:"
            terraform show tfplan

            echo "Applying changes..."
            terraform apply -input=false -auto-approve tfplan
            
#workflows:
  #deploy-and-provision:
    #jobs:
      #- deploy-serverless:
          #filters:
            #branches:
              #only: main
      #- apply-terraform:
          #requires:
            #- deploy-serverless
          #filters:
            #branches:
              #only: main
